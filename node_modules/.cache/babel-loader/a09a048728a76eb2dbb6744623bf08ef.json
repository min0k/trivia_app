{"ast":null,"code":"import decoder from \"./util\";\nimport { nanoid } from \"nanoid\";\nexport default function createTrivia(obj) {\n  // remove html entities\n  const newTriviaQuestions = obj.map(e => {\n    const decodedQuestion = decoder(e.question);\n    const decodedCorrectAnswer = decoder(e.correct_answer);\n    const decodedIncorrectAnswers = e.incorrect_answers.map(e => {\n      return decoder(e);\n    }); // create array containing all 4 answer choices\n\n    const allChoices = decodedIncorrectAnswers;\n    allChoices.push(decodedCorrectAnswer); //Shuffle choices to randomize where correct answer is\n\n    const shuffled = allChoices.map(value => ({\n      value,\n      sort: Math.random()\n    })).sort((a, b) => a.sort - b.sort).map(_ref => {\n      let {\n        value\n      } = _ref;\n      return value;\n    });\n    return {\n      id: nanoid(),\n      question: decodedQuestion,\n      correctAnswer: decodedCorrectAnswer,\n      allAnswerChoices: shuffled,\n      category: e.category,\n      difficulty: e.difficulty\n    };\n  });\n  return newTriviaQuestions;\n}","map":{"version":3,"sources":["/Users/mino/Desktop/scrimba_project/trivia_app/src/components/createTrivia.js"],"names":["decoder","nanoid","createTrivia","obj","newTriviaQuestions","map","e","decodedQuestion","question","decodedCorrectAnswer","correct_answer","decodedIncorrectAnswers","incorrect_answers","allChoices","push","shuffled","value","sort","Math","random","a","b","id","correctAnswer","allAnswerChoices","category","difficulty"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,QAApB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,eAAe,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAEtC;AACA,QAAMC,kBAAkB,GAAGD,GAAG,CAACE,GAAJ,CAASC,CAAD,IAAO;AACxC,UAAMC,eAAe,GAAGP,OAAO,CAACM,CAAC,CAACE,QAAH,CAA/B;AACA,UAAMC,oBAAoB,GAAGT,OAAO,CAACM,CAAC,CAACI,cAAH,CAApC;AACA,UAAMC,uBAAuB,GAAGL,CAAC,CAACM,iBAAF,CAAoBP,GAApB,CAAyBC,CAAD,IAAO;AAC7D,aAAON,OAAO,CAACM,CAAD,CAAd;AACD,KAF+B,CAAhC,CAHwC,CAOxC;;AACA,UAAMO,UAAU,GAAGF,uBAAnB;AACAE,IAAAA,UAAU,CAACC,IAAX,CAAgBL,oBAAhB,EATwC,CAWxC;;AACA,UAAMM,QAAQ,GAAGF,UAAU,CAC1BR,GADgB,CACXW,KAAD,KAAY;AAAEA,MAAAA,KAAF;AAASC,MAAAA,IAAI,EAAEC,IAAI,CAACC,MAAL;AAAf,KAAZ,CADY,EAEhBF,IAFgB,CAEX,CAACG,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,IAAF,GAASI,CAAC,CAACJ,IAFV,EAGhBZ,GAHgB,CAGZ;AAAA,UAAC;AAAEW,QAAAA;AAAF,OAAD;AAAA,aAAeA,KAAf;AAAA,KAHY,CAAjB;AAKA,WAAO;AACLM,MAAAA,EAAE,EAAErB,MAAM,EADL;AAELO,MAAAA,QAAQ,EAAED,eAFL;AAGLgB,MAAAA,aAAa,EAAEd,oBAHV;AAILe,MAAAA,gBAAgB,EAAET,QAJb;AAKLU,MAAAA,QAAQ,EAAEnB,CAAC,CAACmB,QALP;AAMLC,MAAAA,UAAU,EAAEpB,CAAC,CAACoB;AANT,KAAP;AAQD,GAzB0B,CAA3B;AA0BA,SAAOtB,kBAAP;AACD","sourcesContent":["import decoder from \"./util\";\nimport { nanoid } from \"nanoid\";\n\nexport default function createTrivia(obj) {\n\n    // remove html entities\n    const newTriviaQuestions = obj.map((e) => {\n      const decodedQuestion = decoder(e.question);\n      const decodedCorrectAnswer = decoder(e.correct_answer);\n      const decodedIncorrectAnswers = e.incorrect_answers.map((e) => {\n        return decoder(e);\n      });\n\n      // create array containing all 4 answer choices\n      const allChoices = decodedIncorrectAnswers;\n      allChoices.push(decodedCorrectAnswer)\n\n      //Shuffle choices to randomize where correct answer is\n      const shuffled = allChoices\n      .map((value) => ({ value, sort: Math.random() }))\n      .sort((a, b) => a.sort - b.sort)\n      .map(({ value }) => value);\n\n      return {\n        id: nanoid(),\n        question: decodedQuestion,\n        correctAnswer: decodedCorrectAnswer,\n        allAnswerChoices: shuffled,\n        category: e.category,\n        difficulty: e.difficulty,\n      };\n    });\n    return newTriviaQuestions;\n  }\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { nanoid } from 'nanoid';\nimport { encode, decode } from 'js-base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizPage() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([\"hello\"]);\n  React.useEffect(() => {\n    function getTriviaQuestions() {\n      fetch(\"https://opentdb.com/api.php?amount=5&category=31&difficulty=easy&type=multiple&encode=base64\").then(response => response.json()).then(data => setQuestions(data.results));\n    }\n\n    getTriviaQuestions();\n  }, []);\n\n  async function decoder() {\n    const encodedData = await questions;\n    const decoded = await decode(encodedData[0].question);\n    console.log(decoded);\n  }\n\n  decoder();\n  const QuestionCards = questions.map(question => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      question: question.question\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [QuestionCards, /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuizPage, \"3trw3dAmauY2oIeG9rQm8f2tmAY=\");\n\n_c = QuizPage;\n\nfunction Card(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quizpage--button\",\n      children: \"Adios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quizpage--button\",\n      children: \"Hola\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quizpage--button\",\n      children: \"Au Revior\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quizpage--button\",\n      children: \"Salir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Card;\n\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You scored 3/5 answers correct\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Footer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuizPage\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Footer\");","map":{"version":3,"sources":["/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js"],"names":["React","nanoid","encode","decode","QuizPage","questions","setQuestions","useState","useEffect","getTriviaQuestions","fetch","then","response","json","data","results","decoder","encodedData","decoded","question","console","log","QuestionCards","map","Card","props","Footer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,WAA/B;;AAKA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,KAAK,CAACO,QAAN,CAAe,CAAC,OAAD,CAAf,CAAlC;AAEAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AAElB,aAASC,kBAAT,GAA8B;AAC1BC,MAAAA,KAAK,CAAC,8FAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIR,YAAY,CAACQ,IAAI,CAACC,OAAN,CAF1B;AAGH;;AAEDN,IAAAA,kBAAkB;AACrB,GATD,EASG,EATH;;AAWA,iBAAeO,OAAf,GAAyB;AACrB,UAAMC,WAAW,GAAG,MAAMZ,SAA1B;AACA,UAAMa,OAAO,GAAG,MAAMf,MAAM,CAACc,WAAW,CAAC,CAAD,CAAX,CAAeE,QAAhB,CAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACH;;AAEDF,EAAAA,OAAO;AAEP,QAAMM,aAAa,GAAGjB,SAAS,CAACkB,GAAV,CAAcJ,QAAQ,IAAI;AAC5C,wBAAO,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEA,QAAQ,CAACA;AAAzB,OAAwClB,MAAM,EAA9C;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFqB,CAAtB;AAIA,sBACI;AAAA,eACKqB,aADL,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAjCuBlB,Q;;KAAAA,Q;;AAmCxB,SAASoB,IAAT,CAAcC,KAAd,EAAqB;AACjB,sBACI;AAAA,4BACI;AAAA,gBAAIA,KAAK,CAACN;AAAV;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;MAVQK,I;;AAYT,SAASE,MAAT,GAAkB;AACd,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;MAPQA,M","sourcesContent":["import React from \"react\"\nimport { nanoid } from 'nanoid'\nimport { encode, decode } from 'js-base64';\n\n\n\n\nexport default function QuizPage() {\n\n    const [questions, setQuestions] = React.useState([\"hello\"])\n\n    React.useEffect(() => {\n\n        function getTriviaQuestions() {\n            fetch(\"https://opentdb.com/api.php?amount=5&category=31&difficulty=easy&type=multiple&encode=base64\")\n            .then(response => response.json())\n            .then(data => setQuestions(data.results))\n        }\n\n        getTriviaQuestions()\n    }, [])\n\n    async function decoder() {\n        const encodedData = await questions\n        const decoded = await decode(encodedData[0].question);\n        console.log(decoded);\n    }\n\n    decoder()\n\n    const QuestionCards = questions.map(question => {\n        return <Card question={question.question} key={nanoid()} />\n    })\n\n    return (\n        <div>\n            {QuestionCards}\n            <Footer />\n        </div>\n    )\n}\n\nfunction Card(props) {\n    return(\n        <div>\n            <p>{props.question}</p>\n            <button className=\"quizpage--button\">Adios</button>\n            <button className=\"quizpage--button\">Hola</button>\n            <button className=\"quizpage--button\">Au Revior</button>\n            <button className=\"quizpage--button\">Salir</button>\n        </div>\n    )\n}\n\nfunction Footer() {\n    return (\n        <div>\n            <h1>You scored 3/5 answers correct</h1>\n            <button>Play Again</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}
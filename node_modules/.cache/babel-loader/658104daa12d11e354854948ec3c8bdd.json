{"ast":null,"code":"var _jsxFileName = \"/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { encode, decode } from \"js-base64\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizPage() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([\"hello\"]); // use setQuestions below and create a callback function that'll turn all the data into an object\n  // figure out how to get rid of html characters\n\n  React.useEffect(() => {\n    async function getData() {\n      const response = await fetch(\"https://opentdb.com/api.php?amount=5&category=31&difficulty=easy&type=multiple\");\n      const data = await response.json();\n      setQuestions(data.results);\n    }\n\n    getData();\n  }, []);\n  const QuestionCards = questions.map(question => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      question: questions.questions\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [QuestionCards, /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n} // Move to separe files\n\n_s(QuizPage, \"3trw3dAmauY2oIeG9rQm8f2tmAY=\");\n\n_c = QuizPage;\n\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You scored 3/5 answers correct\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Footer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuizPage\");\n$RefreshReg$(_c2, \"Footer\");","map":{"version":3,"sources":["/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js"],"names":["React","nanoid","encode","decode","Card","QuizPage","questions","setQuestions","useState","useEffect","getData","response","fetch","data","json","results","QuestionCards","map","question","Footer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,WAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,KAAK,CAACQ,QAAN,CAAe,CAAC,OAAD,CAAf,CAAlC,CADiC,CAIjC;AACA;;AACAR,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AAEpB,mBAAeC,OAAf,GAAyB;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gFAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,MAAAA,YAAY,CAACM,IAAI,CAACE,OAAN,CAAZ;AACD;;AAEDL,IAAAA,OAAO;AAER,GAVD,EAUG,EAVH;AAYA,QAAMM,aAAa,GAAGV,SAAS,CAACW,GAAV,CAAeC,QAAD,IAAc;AAChD,wBAAO,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEZ,SAAS,CAACA;AAA1B,OAA0CL,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFqB,CAAtB;AAIA,sBACE;AAAA,eACGe,aADH,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,C,CAMD;;GAlCwBX,Q;;KAAAA,Q;;AAqCxB,SAASc,MAAT,GAAkB;AAChB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQA,M","sourcesContent":["import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { encode, decode } from \"js-base64\";\nimport Card from \"./Card\";\n\nexport default function QuizPage() {\n  const [questions, setQuestions] = React.useState([\"hello\"]);\n\n\n  // use setQuestions below and create a callback function that'll turn all the data into an object\n  // figure out how to get rid of html characters\n  React.useEffect(() => {\n\n    async function getData() {\n      const response = await fetch(\"https://opentdb.com/api.php?amount=5&category=31&difficulty=easy&type=multiple\")\n      const data = await response.json();\n      setQuestions(data.results)\n    }\n\n    getData()\n\n  }, []);\n\n  const QuestionCards = questions.map((question) => {\n    return <Card question={questions.questions} key={nanoid()} />;\n  });\n\n  return (\n    <div>\n      {QuestionCards}\n      <Footer />\n    </div>\n  );\n}\n\n\n\n\n\n// Move to separe files\n\n\nfunction Footer() {\n  return (\n    <div>\n      <h1>You scored 3/5 answers correct</h1>\n      <button>Play Again</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Card from \"./Card\";\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizPage() {\n  _s();\n\n  const [trivia, setTrivia] = React.useState([]);\n\n  function createTrivia(obj) {\n    const decodedQuestion = obj.question.replace(/&quot;/g, '\"').replace(/&#039;/g, \"'\");\n    return {\n      question: decodedQuestion,\n      correctAnswer: obj.correct_answer,\n      wrongAnswers: obj.incorrect_answers,\n      category: obj.category,\n      difficulty: obj.difficulty\n    };\n  }\n\n  React.useEffect(() => {\n    async function getTrivia() {\n      try {\n        const response = await fetch(\"https://opentdb.com/api.php?amount=5\");\n        const data = await response.json();\n        console.log(data.results[0]);\n        data.results.forEach(e => {\n          setTrivia(prevValue => [...prevValue, createTrivia(e)]);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getTrivia();\n  }, []);\n  const TriviaCards = trivia.map(e => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      question: e.question\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [TriviaCards, /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizPage, \"5bEC3DjNCW27AXzP2i74x//nXTc=\");\n\n_c = QuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"sources":["/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js"],"names":["React","nanoid","Card","Footer","QuizPage","trivia","setTrivia","useState","createTrivia","obj","decodedQuestion","question","replace","correctAnswer","correct_answer","wrongAnswers","incorrect_answers","category","difficulty","useEffect","getTrivia","response","fetch","data","json","console","log","results","forEach","e","prevValue","err","TriviaCards","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA5B;;AAGA,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAEzB,UAAMC,eAAe,GAAGD,GAAG,CAACE,QAAJ,CAAaC,OAAb,CAAqB,SAArB,EAA+B,GAA/B,EAAoCA,OAApC,CAA4C,SAA5C,EAAuD,GAAvD,CAAxB;AACA,WAAO;AACLD,MAAAA,QAAQ,EAAED,eADL;AAELG,MAAAA,aAAa,EAAEJ,GAAG,CAACK,cAFd;AAGLC,MAAAA,YAAY,EAAEN,GAAG,CAACO,iBAHb;AAILC,MAAAA,QAAQ,EAAER,GAAG,CAACQ,QAJT;AAKLC,MAAAA,UAAU,EAAET,GAAG,CAACS;AALX,KAAP;AAOD;;AAEDlB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AAEpB,mBAAeC,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAA5B;AACA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,OAAL,CAAa,CAAb,CAAZ;AACAJ,QAAAA,IAAI,CAACI,OAAL,CAAaC,OAAb,CAAqBC,CAAC,IAAI;AACxBvB,UAAAA,SAAS,CAACwB,SAAS,IAAI,CACrB,GAAGA,SADkB,EAErBtB,YAAY,CAACqB,CAAD,CAFS,CAAd,CAAT;AAID,SALD;AAMD,OAVD,CAUE,OAAOE,GAAP,EAAY;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD;AACF;;AAEDX,IAAAA,SAAS;AAEV,GApBD,EAoBG,EApBH;AAsBA,QAAMY,WAAW,GAAG3B,MAAM,CAAC4B,GAAP,CAAYJ,CAAD,IAAO;AACpC,wBAAO,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEA,CAAC,CAAClB;AAAlB,OAAiCV,MAAM,EAAvC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFmB,CAApB;AAIA,sBACE;AAAA,eACG+B,WADH,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjDuB5B,Q;;KAAAA,Q","sourcesContent":["import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Card from \"./Card\";\nimport Footer from \"./Footer\";\n\nexport default function QuizPage() {\n\n  const [trivia, setTrivia] = React.useState([])\n\n\n  function createTrivia(obj) {\n\n    const decodedQuestion = obj.question.replace(/&quot;/g,'\"').replace(/&#039;/g, \"'\");\n    return {\n      question: decodedQuestion,\n      correctAnswer: obj.correct_answer,\n      wrongAnswers: obj.incorrect_answers,\n      category: obj.category,\n      difficulty: obj.difficulty\n    }    \n  }\n\n  React.useEffect(() => {\n\n    async function getTrivia() {\n      try {\n        const response = await fetch(\"https://opentdb.com/api.php?amount=5\")\n        const data = await response.json()\n        console.log(data.results[0]);\n        data.results.forEach(e => {\n          setTrivia(prevValue => [\n            ...prevValue,\n            createTrivia(e)\n          ])\n        })\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getTrivia()\n\n  }, [])\n\n  const TriviaCards = trivia.map((e) => {\n    return <Card question={e.question} key={nanoid()} />\n  })\n\n  return (\n    <div>\n      {TriviaCards}\n      <Footer />\n    </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}
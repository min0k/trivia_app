{"ast":null,"code":"var _jsxFileName = \"/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { encode, decode } from \"js-base64\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizPage() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([\"hello\"]); // use setQuestions below and create a callback function that'll turn all the data into an object\n  // figure out how to get rid of html characters\n\n  React.useEffect(() => {\n    async function getData() {\n      const response = await fetch(\"https://opentdb.com/api.php?amount=5&category=31&difficulty=easy&type=multiple\");\n      const data = await response.json();\n      setQuestions(data.results);\n    }\n\n    getData();\n    console.log(\"useEffect ran\");\n  }, []);\n\n  if (!questions) {\n    return null;\n  }\n\n  const QuestionCards = questions.map(question => {\n    const decoded = decode(question.question);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      question: decoded\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [QuestionCards, /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n} // Move to separe files\n\n_s(QuizPage, \"3trw3dAmauY2oIeG9rQm8f2tmAY=\");\n\n_c = QuizPage;\n\nfunction Card(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quizpage--button\",\n      children: \"Adios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quizpage--button\",\n      children: \"Hola\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quizpage--button\",\n      children: \"Au Revior\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quizpage--button\",\n      children: \"Salir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Card;\n\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You scored 3/5 answers correct\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Footer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuizPage\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Footer\");","map":{"version":3,"sources":["/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js"],"names":["React","nanoid","encode","decode","QuizPage","questions","setQuestions","useState","useEffect","getData","response","fetch","data","json","results","console","log","QuestionCards","map","question","decoded","Card","props","Footer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,WAA/B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,KAAK,CAACO,QAAN,CAAe,CAAC,OAAD,CAAf,CAAlC,CADiC,CAIjC;AACA;;AACAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AAEpB,mBAAeC,OAAf,GAAyB;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gFAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,MAAAA,YAAY,CAACM,IAAI,CAACE,OAAN,CAAZ;AACD;;AAEDL,IAAAA,OAAO;AACPM,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GAVD,EAUG,EAVH;;AAYA,MAAI,CAACX,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,QAAMY,aAAa,GAAGZ,SAAS,CAACa,GAAV,CAAeC,QAAD,IAAc;AAChD,UAAMC,OAAO,GAAGjB,MAAM,CAACgB,QAAQ,CAACA,QAAV,CAAtB;AACA,wBAAO,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEC;AAAhB,OAA8BnB,MAAM,EAApC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHqB,CAAtB;AAKA,sBACE;AAAA,eACGgB,aADH,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,C,CAMD;;GAvCwBb,Q;;KAAAA,Q;;AAwCxB,SAASiB,IAAT,CAAcC,KAAd,EAAqB;AACnB,sBACE;AAAA,4BACE;AAAA,gBAAIA,KAAK,CAACH;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;MAVQE,I;;AAYT,SAASE,MAAT,GAAkB;AAChB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQA,M","sourcesContent":["import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { encode, decode } from \"js-base64\";\n\nexport default function QuizPage() {\n  const [questions, setQuestions] = React.useState([\"hello\"]);\n\n\n  // use setQuestions below and create a callback function that'll turn all the data into an object\n  // figure out how to get rid of html characters\n  React.useEffect(() => {\n\n    async function getData() {\n      const response = await fetch(\"https://opentdb.com/api.php?amount=5&category=31&difficulty=easy&type=multiple\")\n      const data = await response.json();\n      setQuestions(data.results)\n    }\n    \n    getData()\n    console.log(\"useEffect ran\");\n  }, []);\n\n  if (!questions) {\n    return null\n  }\n\n  const QuestionCards = questions.map((question) => {\n    const decoded = decode(question.question);\n    return <Card question={decoded} key={nanoid()} />;\n  });\n\n  return (\n    <div>\n      {QuestionCards}\n      <Footer />\n    </div>\n  );\n}\n\n\n\n\n\n// Move to separe files\nfunction Card(props) {\n  return (\n    <div>\n      <p>{props.question}</p>\n      <button className=\"quizpage--button\">Adios</button>\n      <button className=\"quizpage--button\">Hola</button>\n      <button className=\"quizpage--button\">Au Revior</button>\n      <button className=\"quizpage--button\">Salir</button>\n    </div>\n  );\n}\n\nfunction Footer() {\n  return (\n    <div>\n      <h1>You scored 3/5 answers correct</h1>\n      <button>Play Again</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
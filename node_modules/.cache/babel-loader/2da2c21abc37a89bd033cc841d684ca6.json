{"ast":null,"code":"var _jsxFileName = \"/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Card from \"./Card\";\nimport Footer from \"./Footer\";\nimport decoder from \"./util\"; // Understand the code below, then use it to shuffle answers.\n// Taken from -- https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array \n// let shuffled = unshuffled\n//   .map((value) => ({ value, sort: Math.random() }))\n//   .sort((a, b) => a.sort - b.sort)\n//   .map(({ value }) => value)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizPage() {\n  _s();\n\n  const [trivia, setTrivia] = React.useState([]); // TODO - create an all choices array for each trivia object, then shuffle all answers.\n\n  React.useEffect(() => {\n    async function getTrivia() {\n      try {\n        const response = await fetch(\"https://opentdb.com/api.php?amount=5&category=31&type=multiple\");\n        const data = await response.json();\n        setTrivia(createTrivia(data.results));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getTrivia();\n  }, []);\n\n  function createTrivia(obj) {\n    const newTriviaQuestions = obj.map(e => {\n      const decodedQuestion = decoder(e.question);\n      const decodedCorrectAnswer = decoder(e.correct_answer);\n      const decodedIncorrectAnswers = e.incorrect_answers.map(e => {\n        return decoder(e);\n      });\n      const allChoices = [];\n      return {\n        id: nanoid(),\n        question: decodedQuestion,\n        correctAnswer: decodedCorrectAnswer,\n        wrongAnswers: decodedIncorrectAnswers,\n        category: e.category,\n        difficulty: e.difficulty\n      };\n    });\n    return newTriviaQuestions;\n  }\n\n  const TriviaCards = trivia.map(e => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      question: e.question\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  });\n  console.log(\"rendered\");\n  console.log(trivia);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [TriviaCards, /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizPage, \"5bEC3DjNCW27AXzP2i74x//nXTc=\");\n\n_c = QuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"sources":["/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js"],"names":["React","nanoid","Card","Footer","decoder","QuizPage","trivia","setTrivia","useState","useEffect","getTrivia","response","fetch","data","json","createTrivia","results","err","console","log","obj","newTriviaQuestions","map","e","decodedQuestion","question","decodedCorrectAnswer","correct_answer","decodedIncorrectAnswers","incorrect_answers","allChoices","id","correctAnswer","wrongAnswers","category","difficulty","TriviaCards"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,QAApB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5B,CADiC,CAInC;;AACER,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,mBAAeC,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,CAA5B;AAGA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,QAAAA,SAAS,CAACQ,YAAY,CAACF,IAAI,CAACG,OAAN,CAAb,CAAT;AACD,OAND,CAME,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AACDP,IAAAA,SAAS;AACV,GAbD,EAaG,EAbH;;AAeA,WAASK,YAAT,CAAsBK,GAAtB,EAA2B;AACzB,UAAMC,kBAAkB,GAAGD,GAAG,CAACE,GAAJ,CAASC,CAAD,IAAO;AACxC,YAAMC,eAAe,GAAGpB,OAAO,CAACmB,CAAC,CAACE,QAAH,CAA/B;AACA,YAAMC,oBAAoB,GAAGtB,OAAO,CAACmB,CAAC,CAACI,cAAH,CAApC;AACA,YAAMC,uBAAuB,GAAGL,CAAC,CAACM,iBAAF,CAAoBP,GAApB,CAAyBC,CAAD,IAAO;AAC7D,eAAOnB,OAAO,CAACmB,CAAD,CAAd;AACD,OAF+B,CAAhC;AAGA,YAAMO,UAAU,GAAG,EAAnB;AACA,aAAO;AACLC,QAAAA,EAAE,EAAE9B,MAAM,EADL;AAELwB,QAAAA,QAAQ,EAAED,eAFL;AAGLQ,QAAAA,aAAa,EAAEN,oBAHV;AAILO,QAAAA,YAAY,EAAEL,uBAJT;AAKLM,QAAAA,QAAQ,EAAEX,CAAC,CAACW,QALP;AAMLC,QAAAA,UAAU,EAAEZ,CAAC,CAACY;AANT,OAAP;AAQD,KAf0B,CAA3B;AAgBA,WAAOd,kBAAP;AACD;;AAED,QAAMe,WAAW,GAAG9B,MAAM,CAACgB,GAAP,CAAYC,CAAD,IAAO;AACpC,wBAAO,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEA,CAAC,CAACE;AAAlB,OAAiCF,CAAC,CAACQ,EAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFmB,CAApB;AAIAb,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AAEA,sBACE;AAAA,eACG8B,WADH,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GArDuB/B,Q;;KAAAA,Q","sourcesContent":["import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Card from \"./Card\";\nimport Footer from \"./Footer\";\nimport decoder from \"./util\";\n\n// Understand the code below, then use it to shuffle answers.\n// Taken from -- https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array \n\n// let shuffled = unshuffled\n//   .map((value) => ({ value, sort: Math.random() }))\n//   .sort((a, b) => a.sort - b.sort)\n//   .map(({ value }) => value)\n\nexport default function QuizPage() {\n  const [trivia, setTrivia] = React.useState([]);\n\n\n// TODO - create an all choices array for each trivia object, then shuffle all answers.\n  React.useEffect(() => {\n    async function getTrivia() {\n      try {\n        const response = await fetch(\n          \"https://opentdb.com/api.php?amount=5&category=31&type=multiple\"\n        );\n        const data = await response.json();\n        setTrivia(createTrivia(data.results));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getTrivia();\n  }, []);\n\n  function createTrivia(obj) {\n    const newTriviaQuestions = obj.map((e) => {\n      const decodedQuestion = decoder(e.question);\n      const decodedCorrectAnswer = decoder(e.correct_answer);\n      const decodedIncorrectAnswers = e.incorrect_answers.map((e) => {\n        return decoder(e);\n      });\n      const allChoices = [];\n      return {\n        id: nanoid(),\n        question: decodedQuestion,\n        correctAnswer: decodedCorrectAnswer,\n        wrongAnswers: decodedIncorrectAnswers,\n        category: e.category,\n        difficulty: e.difficulty,\n      };\n    });\n    return newTriviaQuestions;\n  }\n\n  const TriviaCards = trivia.map((e) => {\n    return <Card question={e.question} key={e.id} />;\n  });\n\n  console.log(\"rendered\");\n  console.log(trivia);\n\n  return (\n    <div>\n      {TriviaCards}\n      <Footer />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
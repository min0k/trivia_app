{"ast":null,"code":"var _jsxFileName = \"/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"./Card\";\nimport Footer from \"./Footer\";\nimport createTrivia from \"./createTrivia\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizPage() {\n  _s();\n\n  const [trivia, setTrivia] = React.useState([]);\n  const [gameEnded, setGameEnded] = React.useState(false);\n  const [answerChosen, setAnswerChosen] = React.useState(false);\n\n  function choseAnswer() {\n    setAnswerChosen(prevValue => !prevValue);\n  }\n\n  React.useEffect(() => {\n    async function getTrivia() {\n      try {\n        const response = await fetch(\"https://opentdb.com/api.php?amount=5&category=31&difficulty=hard&type=multiple\");\n        const data = await response.json();\n        setTrivia(createTrivia(data.results));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getTrivia();\n  }, []);\n  const TriviaCards = trivia.map(e => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      question: e.question,\n      answerChoices: e.allAnswerChoices,\n      chose: choseAnswer,\n      isAnswerChosen: answerChosen\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  });\n\n  function checkAnswers() {\n    setGameEnded(prevValue => !prevValue);\n  }\n\n  console.log(\"rendered quizpage\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [TriviaCards, /*#__PURE__*/_jsxDEV(Footer, {\n      checkAnswers: checkAnswers,\n      gameEnded: gameEnded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizPage, \"PApSeks4YhHvWC2tri7IFENdCD4=\");\n\n_c = QuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"sources":["/Users/mino/Desktop/scrimba_project/trivia_app/src/components/QuizPage.js"],"names":["React","Card","Footer","createTrivia","QuizPage","trivia","setTrivia","useState","gameEnded","setGameEnded","answerChosen","setAnswerChosen","choseAnswer","prevValue","useEffect","getTrivia","response","fetch","data","json","results","err","console","log","TriviaCards","map","e","question","allAnswerChoices","id","checkAnswers"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACO,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCX,KAAK,CAACO,QAAN,CAAe,KAAf,CAAxC;;AAGF,WAASK,WAAT,GAAuB;AACrBD,IAAAA,eAAe,CAACE,SAAS,IAAI,CAACA,SAAf,CAAf;AACD;;AAECb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,mBAAeC,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gFAD0B,CAA5B;AAGA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAb,QAAAA,SAAS,CAACH,YAAY,CAACe,IAAI,CAACE,OAAN,CAAb,CAAT;AACD,OAND,CAME,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AACDN,IAAAA,SAAS;AACV,GAbD,EAaG,EAbH;AAeA,QAAMS,WAAW,GAAGnB,MAAM,CAACoB,GAAP,CAAYC,CAAD,IAAO;AACpC,wBACE,QAAC,IAAD;AACE,MAAA,QAAQ,EAAEA,CAAC,CAACC,QADd;AAGE,MAAA,aAAa,EAAED,CAAC,CAACE,gBAHnB;AAIE,MAAA,KAAK,EAAEhB,WAJT;AAKE,MAAA,cAAc,EAAEF;AALlB,OAEOgB,CAAC,CAACG,EAFT;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVmB,CAApB;;AAYA,WAASC,YAAT,GAAwB;AACtBrB,IAAAA,YAAY,CAAEI,SAAD,IAAe,CAACA,SAAjB,CAAZ;AACD;;AAEDS,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,sBACE;AAAA,eACGC,WADH,eAEE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEM,YAAtB;AAAoC,MAAA,SAAS,EAAEtB;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjDuBJ,Q;;KAAAA,Q","sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\nimport Footer from \"./Footer\";\nimport createTrivia from \"./createTrivia\";\n\nexport default function QuizPage() {\n  const [trivia, setTrivia] = React.useState([]);\n  const [gameEnded, setGameEnded] = React.useState(false);\n  const [answerChosen, setAnswerChosen] = React.useState(false);\n\n\nfunction choseAnswer() {\n  setAnswerChosen(prevValue => !prevValue);\n}\n\n  React.useEffect(() => {\n    async function getTrivia() {\n      try {\n        const response = await fetch(\n          \"https://opentdb.com/api.php?amount=5&category=31&difficulty=hard&type=multiple\"\n        );\n        const data = await response.json();\n        setTrivia(createTrivia(data.results));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getTrivia();\n  }, []);\n\n  const TriviaCards = trivia.map((e) => {\n    return (\n      <Card\n        question={e.question}\n        key={e.id}\n        answerChoices={e.allAnswerChoices}\n        chose={choseAnswer}\n        isAnswerChosen={answerChosen}\n      />\n    );\n  });\n\n  function checkAnswers() {\n    setGameEnded((prevValue) => !prevValue);\n  }\n\n  console.log(\"rendered quizpage\");\n\n  return (\n    <div>\n      {TriviaCards}\n      <Footer checkAnswers={checkAnswers} gameEnded={gameEnded} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}